buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "guru.nidi:graphviz-java:0.5.3"
        classpath "com.vanniktech:gradle-dependency-graph-generator-plugin:0.5.0"
    }
}

import com.vanniktech.dependency.graph.generator.DependencyGraphGeneratorPlugin
import com.vanniktech.dependency.graph.generator.DependencyGraphGeneratorExtension.Generator
import guru.nidi.graphviz.attribute.Color
import guru.nidi.graphviz.attribute.Style

plugins.apply(DependencyGraphGeneratorPlugin)

def projectGenerator = new Generator(
        "Project", // Suffix for our Gradle task.
        { dependency -> exclude(dependency) },
        { dependency -> false }, // Include transitive dependencies.
        { node, dependency ->
            def moduleName = dependency.getModuleName()
            if (moduleName.contains("core_")) {
                node.add(Style.FILLED, Color.rgb("#43A047")) // material 600
            } else if (moduleName.contains("feature_ui")) {
                node.add(Style.FILLED, Color.rgb("#039BE5"))
            } else if (moduleName.contains("feature_")) {
                node.add(Style.FILLED, Color.rgb("#00ACC1"))
            } else {
                node.add(Style.FILLED, Color.rgb("#FFB300"))
            }

        }, // Give them some color.
)

private boolean exclude(dependency) {
    def moduleName = dependency.getModuleName()

    if (moduleName.contains("runtime")) {
        return false
    }
    return true
}


dependencyGraphGenerator {
    generators = [Generator.ALL, projectGenerator]
}